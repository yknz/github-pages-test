name: Deploy hexo site to Pages repository

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [$default-branch]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    # env:
      # FB_TOKEN: ${{ secrets.FB_TOKEN }}
      # GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/google_application_credentials.json
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Install Go tools
        run: |
          go install github.com/ma91n/snssharecount/cmd/snssharecount@latest
          go install github.com/ma91n/snssharecount/cmd/ga@latest

      - name: Read JSON from secrets test
        run: |
          echo ${{ secrets.SMAPLE_JSON }} > sample.json
          jq . sample.json
      
      # - name: Update SNS counts
      #   run: |
      #     snssharecount > sns_count_cache.json
      #     ga > ga_cache.json

      - name: Checkout deploy target repository
        uses: actions/checkout@v4
        with:
          repository: yknz/yknz.github.io
          token: ${{ secrets.GH_PAT }}
          path: public

      - name: Build with hexo
        run: ${{ steps.detect-package-manager.outputs.runner }} hexo generate

      - name: Deploy to target repository
        run: |
          cd public
          git config --local user.name "GitHub Actions"
          git config --local user.email "github-actions@example.com"
          git add .
          git commit -m "deploy from GitHub Actions"
          git push origin HEAD
